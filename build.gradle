buildscript {
	ext {
		kotlinxHtmlVersion = '0.6.9'
		kotlinVersion = '1.2.30'
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'hu.zsoki.cinegrow.ui'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	jcenter()
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")

	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module:'spring-boot-starter-tomcat'
	}
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile('org.springframework.session:spring-session-core')

	compile "org.jetbrains.kotlinx:kotlinx-html-jvm:${kotlinxHtmlVersion}"
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')

	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
